{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","calculate_win.js","index.js"],"names":["Square","props","className","onClick","class","value","Board","squareArray","squares","map","character","i","key","Game","useState","stepNumber","setStepNumber","xIsNext","setXIsNext","history","setHistory","currentWinner","nextMove","console","log","jumpTo","step","newHistory","slice","index","oldBoard","length","push","result","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.564d5d67.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../index.css\";\n\nconst Square = (props) => {\n  return (\n    <>\n      <button className=\"squares\" onClick={props.onClick}>\n        <p class=\"moveText\">{props.value}</p>\n        </button>\n    </>\n  );\n};\n\nexport default Square;","import React from \"react\";\nimport Square from \"./Square\";\n\nconst Board = (props) => {\n  const squareArray = props.squares.map((character, i) =>\n    <Square key={i} value={character} onClick={() => props.onClick(i)} />\n  );\n  return (\n  <div className=\"board\">\n    {squareArray}\n  </div>\n)};\n\nexport default Board;","import React, { useState } from \"react\";\nimport { calculateWinner } from \"../calculate_win\";\nimport Board from \"./Board\";\n\nconst Game = () => {\n\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([['', '', '', '', '', '', '', '', '']]);\n\n  var currentWinner = calculateWinner(history[stepNumber]);\n  var nextMove = xIsNext ? 'X' : 'O';\n  console.log(history);\n\n  let handleClick = (index) => {\n    if (currentWinner === null) {\n      var oldBoard = ['', '', '', '', '', '', '', '', ''];\n      for (var i = 0; i < history[stepNumber].length; i++) {\n        oldBoard[i] = history[stepNumber][i];\n      }\n      oldBoard[index] = nextMove;\n      history.push(oldBoard);\n      setHistory(history);\n      setXIsNext(!xIsNext);\n      setStepNumber(stepNumber + 1);\n\n    }\n  }\n\n  let jumpTo = (step) => {\n    if (step === 0) {\n      setHistory([['', '', '', '', '', '', '', '', '']]);\n      setXIsNext(true);\n      setStepNumber(0);\n    }\n    else {\n      var newHistory = history.slice(0, step + 1);\n      console.log(newHistory);\n      setHistory(newHistory)\n      if (step % 2 === 0) {\n        setXIsNext(true);\n      } \n      else {\n        setXIsNext(false);\n      }\n      setStepNumber(step);\n    }\n  }\n\n  let renderMoves = () => {\n    const historyButtons = history.map((result, i) => {\n\n      if (i !== 0) {\n        return (<>\n          <button className=\"start\" onClick={() => jumpTo(i)}>Go to move #{i}</button>\n          <br />\n          <br />\n           </>);\n      }\n      else {\n        return (<>\n        <button className=\"start\" onClick={() => jumpTo(0)}>Go to Start</button>\n        <br />\n        <br />\n        </>)\n      }});\n    return historyButtons;\n    \n  }\n\n  let result = () => {\n    if (currentWinner === 'X' || currentWinner === 'O') {\n      return \"Winner: \" + currentWinner;\n    }\n    else if (currentWinner === null && stepNumber === 9) {\n      return \"Tie Game!\";\n    }\n    return \"Next Player: \" + nextMove;\n  }\n\n  return (\n    <>\n      <h1>Tic Tac Toe</h1>\n      <Board squares={history[stepNumber]} onClick={handleClick}/>\n      <div className='info-wrapper'>\n          <div>\n          <h3>History</h3>\n          <br />\n          {renderMoves()}\n          </div>\n          <h3>{result()}</h3>\n      </div>\n  </>\n  );\n};\n\nexport default Game;\n","export function calculateWinner(squares) {\n\n  // Check all top areas\n  if (squares[0] !== \"\" && squares[0] === squares[1] && squares[1] === squares[2]) {\n    return squares[0];\n  }\n\n  // Check all middle horizontal areas\n  else if (squares[3] !== \"\" && squares[3] === squares[4] && squares[4] === squares[5]) {\n    return squares[3];\n  }\n\n  // Check all bottom areas\n  else if (squares[6] !== \"\" && squares[6] === squares[7] && squares[7] === squares[8]) {\n    return squares[6];\n  }\n\n  // Check all left areas\n  else if (squares[0] !== \"\" && squares[0] === squares[3] && squares[3] === squares[6]) {\n    return squares[0];\n  }\n\n  // Check all middle vertical areas\n  else if (squares[1] !== \"\" && squares[1] === squares[4] && squares[4] === squares[7]) {\n    return squares[1];\n  }\n\n  // Check all right areas\n  else if (squares[2] !== \"\" && squares[2] === squares[5] && squares[5] === squares[8]) {\n    return squares[2];\n  }\n\n  // Check left diagonal\n  else if (squares[0] !== \"\" && squares[0] === squares[4] && squares[4] === squares[8]) {\n    return squares[0];\n  }\n\n  // Check right diagonal\n  else if (squares[2] !== \"\" && squares[2] === squares[4] && squares[4] === squares[6]) {\n    return squares[2];\n  }\n\n  return null;\n}\n\n// Sample code\n/*   // Check all top areas\n  if (squares[0] !== \"\" && squares[0] === squares[1] && squares[1] === squares[2]) {\n    return squares[0];\n  }\n\n  // Check all middle horizontal areas\n  else if (squares[3] !== \"\" && squares[3] === squares[4] && squares[4] === squares[5]) {\n    return squares[3];\n  }\n\n  // Check all bottom areas\n  else if (squares[6] !== \"\" && squares[6] === squares[7] && squares[7] === squares[8]) {\n    return squares[6];\n  }\n\n  // Check all left areas\n  else if (squares[0] !== \"\" && squares[0] === squares[3] && squares[3] === squares[6]) {\n    return squares[0];\n  }\n\n  // Check all middle vertical areas\n  else if (squares[1] !== \"\" && squares[1] === squares[4] && squares[4] === squares[7]) {\n    return squares[1];\n  }\n\n  // Check all right areas\n  else if (squares[2] !== \"\" && squares[2] === squares[5] && squares[5] === squares[8]) {\n    return squares[2];\n  }\n\n  // Check left diagonal\n  else if (squares[0] !== \"\" && squares[0] === squares[4] && squares[4] === squares[8]) {\n    return squares[0];\n  }\n\n  // Check right diagonal\n  else if (squares[2] !== \"\" && squares[2] === squares[4] && squares[4] === squares[6]) {\n    return squares[2];\n  } */","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDom.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}